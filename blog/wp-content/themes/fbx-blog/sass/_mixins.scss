/* =======================================================================
## ++ Media Queries
========================================================================== */

/*
    Used for media queries.
    Add these mixins in your normal scss flow.

    Eg.
    .container{
        width:1024px;

        @include tablets{
            width:90%;
        }
    }
*/

@mixin lowresmonitors{
        @media screen and (max-width: 1350px){ @content;}
}

@mixin tablets{
        @media screen and (max-width: 1100px){ @content; }
}

@mixin phones{
        @media screen and (max-width: 720px){ @content; }
}

@mixin phone-xs-up {
  @media (min-width: #{$phone-xs-width}) {
    @content;
  }
}

@mixin phone-up {
  @media (min-width: #{$phone-width}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin tablet-xl-up {
  @media (min-width: #{$tablet-xl-width}) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin desktop-xl-up {
  @media (min-width: #{$desktop-xl-width}) {
    @content;
  }
}

/* =======================================================================
## ++ Unit transform
========================================================================== */

/*
    Used for making containers have width in percentages.
    Usage: define elemnt width in px and the width of parent elemnt in px.
    eg. .block{width:cp(512px, 1024px)} this will result in .block{width:50%;}
*/

@function cp($target, $container) {
    @return ($target / $container) * 100%;
}

/*
    Used for making px values convert to rem values
    Usage: define font-size in px and it will convert to rems
    eg. font-size: rem(14px);
*/

@function rem($target, $context: $base-font-size) {
   @if $target == 0 { @return 0 }
   @return $target / $context + 0rem;
}
$base-font-size:16px;
